def artifactname = "devops-snow-build-app.jar"
def repoName = "JenkinsDevOpsProject"
def pipelineName = "SunilPipelines/Sunil-Scripted-Pipeline-Sonar"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def changeRequestId = "testId"
def artifactVersion = "2.${env.BUILD_NUMBER}"
def artifactSemVersion = "${artifactVersion}.0"


pipeline {
  agent any
  tools {
       maven 'Maven'
   }
   environment {
	 SCANNER_HOME = tool 'sonarScanner'
	}  
  stages {
       stage('Build &1') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'

           }
       }
       /*stage('Test') {
           steps {
	      //sonarSummaries()
              snDevOpsStep()
	      sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }*/
      stage('Deploy') {
                 steps {
		 
                   echo 'Deploying the change....'
		  // snDevOpsSecurityResult securityResultAttributes: "{'applicationName': 'RiyaJenkins', 'buildVersion': ''}", securityToolId: "8fed51e8c347a550946e706dc0013164" // toolId: "8075de6f87e569100aaeea483cbb35c7"
                   snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           	//   snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
		  // snDevOpsChange(ignoreErrors:false)
		  // snDevOpsChange changeRequestDetails: '{ "attributes": { "short_description": "Testing","category": "DevOps", "chg_model": "e55d0bfec343101035ae3f52c1d3ae49", "type": "standard", "standard_change_template": "508e02ec47410200e90d87e8dee49058"}}'//standard
		    // snDevOpsChange changeRequestDetails: '{ "attributes": { "chg_model": "adffaa9e4370211072b7f6be5bb8f2ed", "type": "standard", "standard_change_template": "508e02ec47410200e90d87e8dee49058"}}'	
		     //snDevOpsChange changeRequestDetails: '{ "attributes": { "type": "standard", "standard_change_template": "508e02ec47410200e90d87e8dee49058"}}'
		      // snDevOpsChange()
		      snDevOpsChange changeRequestDetails: '{ "attributes": { "type": "normal"}}'
		     /*script{
                    changeNumber = snDevOpsGetChangeNumber()
                    echo '>> Deploy Stage -----'
                    sh "echo ${changeNumber}"
                  
                  }*/
		    
		   
                 }
	}
		 
       /*stage('pre prod deploy') { 
         steps {
                    //snDevOpsStep()     
                      echo "packageName - ${packageName}" 
                       snDevOpsPackage(name: "${packageName}", artifactsPayload:"""{"artifacts": [{"name": "${artifactname}","version":"${artifactVersion}","semanticVersion": "${artifactSemVersion}","repositoryName": "${repoName}"}]}""")
                    }
            }
		 
      }*/
	   
     
  }
 
  
     
     
  def sonarSummaries() {
 //  withSonarQubeEnv('SonarCloud') {
    //   sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner-cloud.properties'
 //  }
  withSonarQubeEnv('sonarQube_local'){
      if(fileExists("sonar-project.properties")) {
      	sh '${SCANNER_HOME}/bin/sonar-scanner'
        } else {
            sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/qa-sonar-scanner.properties'
   		  //sh '${SCANNER_HOME}/bin/sonar-scanner -Dproject.settings=${SCANNER_HOME}/conf/sonar-scanner.properties'
        }
  }

}
